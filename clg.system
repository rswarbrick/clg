;;; -*- Mode: lisp -*-

(setf
 (logical-pathname-translations "clg")
 '(("**;*.*.*" "/home/espen/src/clg/**/*.*.*")))
(setq mk::*cmu-errors-to-file* nil)

(load "clg:tools;config")
(load "clg:tools;sharedlib")

(import 'alien:load-shared-library)

(eval
 `(mk:defsystem clg
    :source-pathname "clg:"
    :binary-pathname "clg:"
    :components
    ((:module tools
      :components ("autoexport"))
     (:module glib
      :initially-do
      (progn
	(load-shared-library "libglib-1.3.so.1")
	(load-shared-library "libgobject-1.3.so.1" :init "g_type_init"))
      :components
      ((:file "glib-package")
       (:file "gutils" :depends-on ("glib-package"))
       (:file "gforeign" :depends-on ("gutils"))
       (:file "glib" :depends-on ("gforeign"))
       (:file "gtype" :depends-on ("glib"))
       (:file "gobject" :depends-on ("gtype"))
       (:file "glib-export" :depends-on ("gutils" "glib" "gtype" "gobject")))
      :depends-on (tools))
     (:file "gdkglue"
      :source-pathname "gdk;"
      :binary-pathname "gdk;"
      :initially-do
      (progn
	(load-shared-library "libgdk_pixbuf-1.3.so.1")
	(load-shared-library "libgdk-x11-1.3.so.1")
	;; Initializing of gdk types is done by gtk, so we
	;; have to load an initialize it at this point
	(load-shared-library
	 "libgtk-x11-1.3.so.1"
	 :init "gtk_init"
	 :prototype '(function
		      c-call:void
		      alien:system-area-pointer
		      alien:system-area-pointer)
	 :initargs (list (system:int-sap 0) (system:int-sap 0))))
      :language :c
      :compiler-options (:cflags ,(configure-cflags "gtk-config-2.0")
			 :optimize 2))
     (:module gdk
      :components
      ((:file "gdk-package")
       (:file "gdk-export" :depends-on ("gdkenums" "gdktypes" "gdk"))
       (:file "gdkenums" :depends-on ("gdk-package"))
       (:file "gdktypes" :depends-on ("gdkenums"))
       (:file "gdk" :depends-on ("gdktypes")))
      :depends-on (glib "gdkglue"))
     (:file "gtkglue"
      :source-pathname "gtk;"
      :binary-pathname "gtk;"
      :language :c
      :compiler-options (:cflags ,(configure-cflags "gtk-config-2.0")
			 :optimize 2
			 :definitions (#+cmu CMUCL)
			 :include-paths ("/usr/lib/cmucl")))
     (:module gtk
      :components
      ((:file "gtk-package")
       (:file "gtk-export" :depends-on ("gtkenums" "gtktypes" "gtk"))
       (:file "gtkobject" :depends-on ("gtk-package"))
       (:file "gtkenums" :depends-on ("gtk-package"))
       (:file "gtktypes" :depends-on ("gtkenums" "gtkobject"))
       (:file "gtkwidget" :depends-on ("gtktypes"))
       (:file "gtkcontainer" :depends-on ("gtktypes"))
       (:file "gtk" :depends-on ("gtkcontainer")))
      :depends-on (glib gdk "gtkglue")))))

